events {}

http {
    log_format custom '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for" '
                        'backend=$upstream_addr request_time=$request_time';

    access_log /var/log/nginx/custom_access.log;


    upstream flask_backend_round_robin {
        # Round Robin (por defecto)
        server app1:5000;
        server app2:5000;
        server app3:5000;
    }

    upstream flask_backend_least_conn {
        # Least Connections (env√≠a al servidor con menos conexiones activas)
        least_conn;
        server app1:5000;
        server app2:5000;
        server app3:5000;
    }

    server {
        listen 80;

        # Ruta con Round Robin (predeterminado)
        location / {
            proxy_pass http://flask_backend_round_robin;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Ruta con Least Connections
        location /least {
            proxy_pass http://flask_backend_least_conn;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
