version: '3.9'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=proyectogrupo5AS
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=ProyectoGrupo5
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - app-network

  app1:
    build: .
    container_name: app1
    expose:
      - "5000"  # Exponer internamente el puerto 5000
    ports:
      - "5001:5000"  # Mapear 5001 de tu host a 5000 del contenedor
    depends_on:
      - mongodb
      - sqlserver
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
    networks:
      - app-network

  app2:
    build: .
    container_name: app2
    expose:
      - "5000"  
    ports:
      - "5002:5000"
    depends_on:
      - mongodb
      - sqlserver
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
    networks:
      - app-network

  app3:
    build: .
    container_name: app3
    expose:
      - "5000"
    ports:
      - "5003:5000"
    depends_on:
      - mongodb
      - sqlserver
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "5000:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app1
      - app2
      - app3
    networks:
      - app-network

volumes:
  mongodb_data:
  sqlserver_data:

networks:
  app-network:
    driver: bridge
